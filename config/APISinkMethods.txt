<android.app.DownloadManager.Request: void <init>(android.net.Uri)>
<android.app.DownloadManager$Request: void <init>(android.net.Uri)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<java.io.File: void <init>(java.io.File,java.lang.String)>
<java.io.File: void <init>(java.lang.String,java.lang.String)>
<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>
<java.util.zip.ZipFile: java.lang.String getName()>
<java.net.DatagramSocket: void <init>(int)>
<java.net.DatagramSocket: void <init>(int,java.net.InetAddress)>
<java.net.DatagramSocket: void <init>(java.net.SocketAddress)>
<java.net.HttpURLConnection: void <init>(java.net.URL)>
<java.net.MulticastSocket: void <init>(int)>
<java.net.MulticastSocket: void <init>(java.net.SocketAddress)>
<java.net.ServerSocket: void bind(java.net.SocketAddress)>
<java.net.ServerSocket: void bind(java.net.SocketAddress,int)>
<java.net.ServerSocket: void <init>(int)>
<java.net.ServerSocket: void <init>(int,int)>
<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>
<java.net.Socket: void <init>(java.lang.String,int)>
<java.net.Socket: void <init>(java.lang.String,int,boolean)>
<java.net.Socket: void <init>(java.lang.String,int,java.net.InetAddress,int)>
<java.net.Socket: void <init>(java.net.InetAddress,int)>
<java.net.Socket: void <init>(java.net.InetAddress,int,boolean)>
<java.net.Socket: void <init>(java.net.InetAddress,int,java.net.InetAddress,int)>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>
<android.app.ActivityManager: void restartPackage(java.lang.String)>
<android.os.PowerManager: void goToSleep(long)>
<android.os.PowerManager: void reboot(java.lang.String)>
<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[])>
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>
<java.net.URL: java.lang.Object getContent(java.lang.Class[])>
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>